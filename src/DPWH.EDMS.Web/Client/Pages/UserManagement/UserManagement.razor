@page "/user-management"
@using DPWH.EDMS.Client.Shared.Models
@using DPWH.EDMS.IDP.Core.Constants
@using DPWH.EDMS.Api.Contracts
@using DPWH.EDMS.Components.Helpers

@inherits UserManagementBase
@inject NavigationManager nav
@attribute [Authorize(Policy = "RequireActiveRoles")]

<EdmsLoader Visible="@IsLoading" />

<EdmsBreadcrumbs Data="@BreadcrumbItems" />
<h3>User Management</h3>
<hr />
<div class="d-flex flex-row gap-3 flex-wrap">
    <div class="d-flex">
        <TelerikCard Class="um-card h-100">
            <CardHeader>
                <h5 clLicenseUsedcense</h5>
            </CardHeader>
            <CardBody>
                <p class="um-value">@LicenseUsed/@LicenseLimit</p>
                <div class="d-flex flex-row justify-content-between">
                    <p class="mb-0 k-font-size-sm">Used/Available</p>
                    <p class="mb-0 k-font-size-sm">Total License: @LicenseLimit</p>
                </div>
                <TelerikProgressBar Value="GetLicenseAccumulatedPercentage()">
                    <ProgressBarLabel Visible="true">
                        <Template>
                            @(GetLicenseAccumulatedPercentage())%
                        </Template>
                    </ProgressBarLabel>
                </TelerikProgressBar>
            </CardBody>
        </TelerikCard>
    </div>
    <div class="d-flex">
        <TelerikCard Class="um-card h-100">
            <CardHeader>
                <h5 class="mb-0">View-Only Licenses</h5>
            </CardHeader>
            <CardBody>
                <p class="um-value">Unlimited</p>
                <div class="d-flex flex-row justify-content-between">
                    <p class="mb-0 k-font-size-sm">Unlimited Licenses</p>
                    <p class="mb-0 k-font-size-sm">Total User: @TotalUsers</p>
                </div>
            </CardBody>
        </TelerikCard>
    </div>
</div>
<div class="d-flex flex-row mt-3">
    <TelerikCard Width="100%">
        <CardBody>
            <div class="d-flex flex-row justify-content-between">
                <CardTitle Class="mb-0">Users</CardTitle>
            </div>
            <CardSeparator Class="my-2"></CardSeparator>
            <TelerikButton Class="mb-2"
                           Icon="@FontIcon.Plus"
                           ThemeColor="@ThemeConstants.Button.ThemeColor.Primary"
                           OnClick="AddUser">
                Add User
            </TelerikButton>

            <TelerikButton Icon="@FontIcon.FileExcel" 
                           ThemeColor="@(ThemeConstants.Button.ThemeColor.Success)" 
                           OnClick="@ConfirmToExcel">
                           Export
            </TelerikButton>
            <div>
                @if (GridData != null && !XSmall)
                {
                    <TelerikContextMenu @ref="@ContextMenuRef" Data="@MenuItems" OnClick="@((GridMenuItemModel item) => OnItemClick(item))"></TelerikContextMenu>
                    <TelerikGrid TItem="UserModel"
                                 @bind-PageSize="@PageSize"
                                 Height="@GridHeight"
                                 FilterMode="GridFilterMode.FilterRow"
                                 Sortable=true
                                 Data="GridData"
                                 OnStateChanged="@OnStateChanged"
                                 @ref="GridRef"
                                 Pageable = "true"
                                 Context="user">

                        <GridSettings>
                            <GridPagerSettings PageSizes="@PageSizes">
                            </GridPagerSettings>
                        </GridSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(UserModel.FirstName) Title="First Name" />
                            <GridColumn Field=@nameof(UserModel.LastName) Title="Last Name" />
                            <GridColumn Field=@nameof(UserModel.Email) Title="Email" />
                            <GridColumn Field=@nameof(UserModel.UserAccess) Title="User Access" />
                            <GridCommandColumn Width="50px">
                                <TelerikButton Icon="@FontIcon.MoreVertical" OnClick="@( (MouseEventArgs e) => ShowRowOptions(e, context as UserModel) )"></TelerikButton>
                            </GridCommandColumn>
                        </GridColumns>
                    </TelerikGrid>
                }
                else
                {
                    <span>No Data to display.</span>
                }
            </div> 
        </CardBody>
    </TelerikCard>
</div>

<div class="modal">
    <TelerikDialog @bind-Visible="@IsVisibleDeact" Width="@RespSizer" Title="Confirmation">
        <DialogContent>
            <p class="text-center">Are you sure you want to deactivate <span class="username">@userName.UserName</span> account?</p>
        </DialogContent>
        <DialogButtons>
            <TelerikButton OnClick="@(() => { IsVisibleDeact = false; })">No</TelerikButton>
            <TelerikButton ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)" OnClick="@(() => OnSelectUser(userName))">Yes</TelerikButton>
        </DialogButtons>
    </TelerikDialog>
</div>


<style>
    .um-card {
        display: flex;
        width: 450px;
    }

        .um-card .k-card-header {
            border-bottom: 1px solid #dee2e6;
            background-color: transparent;
        }

        .um-card .k-card-body .um-value {
            color: #38339b;
            font-size: 40px;
            font-weight: 400;
        }
</style>