@page "/"
@using DPWH.EDMS.Api.Contracts
@using DPWH.EDMS.Client.Shared.MockModels
@using DPWH.EDMS.Components.Helpers

@attribute [Authorize]
@inherits HomeBase

<TelerikMediaQuery Media="(max-width: 480px)" OnChange="(changed => HandleMediaQueryChange(nameof(XSmall), changed))"></TelerikMediaQuery>
<TelerikMediaQuery Media="(max-width: 960px)" OnChange="(changed => HandleMediaQueryChange(nameof(Small), changed))"></TelerikMediaQuery>
<TelerikMediaQuery Media="(max-width: 1280px)" OnChange="(changed => HandleMediaQueryChange(nameof(Medium), changed))"></TelerikMediaQuery>
<TelerikMediaQuery Media="(min-width: 1281px)" OnChange="(changed => HandleMediaQueryChange(nameof(Large), changed))"></TelerikMediaQuery>

<EdmsLoader Visible="IsLoading" />

<TelerikCard Width="100%" Class="ch-card mb-4">
    <CardHeader Class="ch-card">
        <h3 class="mb-0">Overview </h3>
    </CardHeader>
</TelerikCard>
<TelerikCard Width="100%">
    <div class="row">
        <div class="col-lg-8">
            <div class="col d-flex flex-row flex-wrap gap-3">
                @foreach (var status in OverviewTotalTopBar)
                {
                    <TelerikCard Class="ch-card-flex flex-grow-1">
                        <CardHeader Class="ch-card-flex">
                            <h6 style="font-size: 12px;" class="mb-0">@status.Id</h6>
                            <h1 class="mb-0">@status.Name</h1>
                        </CardHeader>
                    </TelerikCard>
                }
            </div>
        </div>
        <div class="col-lg-4 d-flex flex-wrap flex-row justify-content-center align-content-center">
            <img class="inspectionBanner" src="_content/DPWH.EDMS.Components/images/inspection-banner.svg" alt="inspection-banner" />
        </div>
    </div>

</TelerikCard>
<div class="d-flex flex-row mt-3 mb-4">
    <TelerikCard Width="100%">
        <CardBody>
            <div class="d-flex flex-row justify-content-between">
                <CardTitle Class="mb-0">Request History</CardTitle>
                <TelerikButton Title="View All" Icon="@FontIcon.ChevronRight"></TelerikButton>
            </div>
            <CardSeparator Class="my-2"></CardSeparator>
            <div class="mobile-property-grid">

                @if (GridData != null && !XSmall)
                {
                    <TelerikGrid TItem="RecordRequestModel"
                                 @bind-PageSize="@PageSize"
                                 Height="@GridHeight"
                                 FilterMode="GridFilterMode.FilterRow"
                                 Sortable=true
                                 Data="GridData"
                                 OnStateChanged="@OnStateChanged"
                                 OnRowClick="GoToSelectedItem"
                                 @ref="GridRef"
                                 Context="item">
                        <GridSettings>
                            <GridPagerSettings PageSizes="@PageSizes">
                            </GridPagerSettings>
                        </GridSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(RecordRequestModel.ControlNumber) Title="Control No.">
                                <FilterCellTemplate>
                                    <TelerikNumericTextBox Value="@SearchControlNumber"
                                                           ValueChanged="@((int? val) =>
                                               {
                                                  SearchControlNumber = val;

                                                  SetFilterGrid();

                                               })">

                                    </TelerikNumericTextBox>

                                    <TelerikButton ButtonType="ButtonType.Button"
                                                   Class="k-clear-button-visible ml-sm"
                                                   Icon="@SvgIcon.FilterClear"
                                                   Enabled="@(SearchControlNumber.HasValue)"
                                                   OnClick="@(() =>
                                               {
                                                 SearchControlNumber = null;

                                                 SetFilterGrid();

                                              })">
                                    </TelerikButton>
                                </FilterCellTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(RecordRequestModel.FullName) Title="Full Name">
                                <FilterCellTemplate>
                                    <TelerikTextBox Value="@SearchFullName"
                                                    ValueChanged="@((string? val) =>
                                               {
                                                  SearchFullName = val;

                                                  SetFilterGrid();

                                               })">

                                    </TelerikTextBox>

                                    <TelerikButton ButtonType="ButtonType.Button"
                                                   Class="k-clear-button-visible ml-sm"
                                                   Icon="@SvgIcon.FilterClear"
                                                   Enabled="@(!string.IsNullOrEmpty(SearchFullName))"
                                                   OnClick="@(() =>
                                               {
                                                 SearchFullName = null;

                                                 SetFilterGrid();

                                              })">
                                    </TelerikButton>
                                </FilterCellTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(RecordRequestModel.DateRequested) Title="Date Requested" DisplayFormat="{0:MMMM dd, yyyy}">
                                <FilterCellTemplate>
                                    <TelerikDatePicker Value="@SelectedDate"
                                                       ShowWeekNumbers="true"
                                                       ValueChanged="@((DateTime? val) =>
                                               {
                                                  SelectedDate = val;

                                                  SetFilterGrid();

                                               })">

                                    </TelerikDatePicker>

                                    <TelerikButton ButtonType="ButtonType.Button"
                                                   Class="k-clear-button-visible ml-sm"
                                                   Icon="@SvgIcon.FilterClear"
                                                   Enabled="@(SelectedDate.HasValue)"
                                                   OnClick="@(() =>
                                               {
                                                 SelectedDate = null;

                                                 SetFilterGrid();

                                              })">
                                    </TelerikButton>
                                </FilterCellTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(RecordRequestModel.Purpose) Title="Purpose">
                                <FilterCellTemplate>
                                    <TelerikTextBox Value="@SearchPurpose"
                                                    ValueChanged="@((string? val) =>
                                               {
                                                  SearchPurpose = val;

                                                  SetFilterGrid();

                                               })">

                                    </TelerikTextBox>

                                    <TelerikButton ButtonType="ButtonType.Button"
                                                   Class="k-clear-button-visible ml-sm"
                                                   Icon="@SvgIcon.FilterClear"
                                                   Enabled="@(!string.IsNullOrEmpty(SearchPurpose))"
                                                   OnClick="@(() =>
                                               {
                                                 SearchPurpose = null;

                                                 SetFilterGrid();

                                              })">
                                    </TelerikButton>
                                </FilterCellTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(RecordRequestModel.Status) Title="Status">
                                <FilterCellTemplate>
                                    <TelerikDropDownList Data="@StatusList"
                                                         Value="@SearchStatus"
                                                         ValueField="string"
                                                         TextField="string"
                                                         DefaultText="Select Status"
                                                         Width="100%"
                                                         FilterOperator="@StringFilterOperator.Contains"
                                                         ValueChanged="@((string val) =>
                                                   {
                                                      SearchStatus = val;

                                                      SetFilterGrid();

                                                   })">
                                    </TelerikDropDownList>
                                    <TelerikButton ButtonType="ButtonType.Button"
                                                   Class="k-clear-button-visible ml-sm"
                                                   Icon="@SvgIcon.FilterClear"
                                                   Enabled="@(!string.IsNullOrEmpty(SearchStatus))"
                                                   OnClick="@(() =>
                                                  {
                                                       SearchStatus = string.Empty;

                                                       SetFilterGrid();

                                                  })">
                                    </TelerikButton>
                                </FilterCellTemplate>
                            </GridColumn>
                        </GridColumns>
                    </TelerikGrid>
                }
                else if (GridData != null && XSmall)
                {
                    <TelerikGrid TItem="RecordRequestModel"
                                 @bind-PageSize="@PageSize"
                                 Height="@GridHeight"
                                 FilterMode="GridFilterMode.FilterRow"
                                 Sortable=true
                                 Data="GridData"
                                 OnStateChanged="@OnStateChanged"
                                 @ref="GridRef"
                                 Context="item">
                        <GridSettings>
                            <GridPagerSettings PageSizes="@PageSizes">
                            </GridPagerSettings>
                        </GridSettings>
                        <DetailTemplate>
                            @{
                                var prop = item as RecordRequestModel;
                                <div class="d-flex flex-column">
                                    <p><b>Status: </b>@item.Status</p>
                                    <p><b>Control Number: </b>@item.ControlNumber</p>
                                    <p><b>Purpose: </b>@item.Purpose</p>
                                    <p><b>Date Requested: </b>@(GenericHelper.GetDateDisplay(item.DateRequested))</p>
                                </div>
                            }
                        </DetailTemplate>
                        <GridColumns>
                            <GridColumn Field=@nameof(RecordRequestModel.FullName) Title="Full Name">
                                <FilterCellTemplate>
                                    <TelerikTextBox Value="@SearchFullName"
                                                    ValueChanged="@((string? val) =>
                                               {
                                                  SearchFullName = val;

                                                  SetFilterGrid();

                                               })">

                                    </TelerikTextBox>

                                    <TelerikButton ButtonType="ButtonType.Button"
                                                   Class="k-clear-button-visible ml-sm"
                                                   Icon="@SvgIcon.FilterClear"
                                                   Enabled="@(!string.IsNullOrEmpty(SearchFullName))"
                                                   OnClick="@(() =>
                                               {
                                                 SearchFullName = null;

                                                 SetFilterGrid();

                                              })">
                                    </TelerikButton>
                                </FilterCellTemplate>
                            </GridColumn>
                        </GridColumns>
                    </TelerikGrid>
                }
                else
                {
                    <span>No Data to display.</span>
                }
                <TelerikPager PageChanged="@PageChangedHandler"
                              Total="TotalItems"
                              ButtonCount="6"
                              PageSize="@PageSize"
                              PageSizeChanged="@PageSizeChangedHandler"
                              PageSizes="@(new List<int?> {5, 10, 20})"
                              Page="@Page">
                </TelerikPager>

            </div>

        </CardBody>
    </TelerikCard>
</div>
@if (isEndUser == false)
 {
<div class="d-flex flex-lg-row flex-column mt-3 gap-3 mb-4">
    <div class="col">
        <TelerikCard Width="100%">
            <CardHeader Class="ch-card">
                <h5 class="mb-0">Overview Status </h5>
            </CardHeader>
            <div class="container">
                <TelerikChart Class="PieChart" @ref="FullfilledChartRef">
                    <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Pie" Data="@OverviewTotalChart"
                                     Field="@nameof(SimpleKeyValue.Name)" CategoryField="@nameof(SimpleKeyValue.Id)">
                            <ChartSeriesTooltip Visible="true">
                                <Template>
                                    @((context.DataItem as SimpleKeyValue).Id) for @((context.DataItem as SimpleKeyValue).Name)
                                </Template>
                            </ChartSeriesTooltip>
                            <ChartSeriesLabels Position="ChartSeriesLabelsPosition.Center"
                                               Visible="true"
                                               Font="16px 'Times New Roman'"
                                               Background="transparent"></ChartSeriesLabels>
                        </ChartSeries>
                    </ChartSeriesItems>
                    @if (XSmall)
                    {
                        <ChartLegend Position="ChartLegendPosition.Bottom">

                        </ChartLegend>
                    }
                    else
                    {
                        FullfilledChartRef.Refresh();
                        <ChartLegend Position="ChartLegendPosition.Right">

                        </ChartLegend>
                    }
                </TelerikChart>
            </div>
        </TelerikCard>
    </div>
    <div class="col">
        <TelerikCard Width="100%">
            <CardHeader Class="ch-card">
                <h5 class="mb-0">Monthly Requests </h5>
            </CardHeader>
            <div class="container">
                <TelerikChart @ref="@RequstChartRef">
                    <ChartTooltip Visible="true"></ChartTooltip>
                    <ChartLegend Visible="false"></ChartLegend>

                    <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Line" Data="@Series1Data">
                        </ChartSeries>
                    </ChartSeriesItems>

                    <ChartValueAxes>
                        <ChartValueAxis Max="@ValueAxisMax" Name="my-value-axis">
                            <ChartValueAxisLabels Format="#"></ChartValueAxisLabels>
                        </ChartValueAxis>
                    </ChartValueAxes>

                    <ChartCategoryAxes>
                        <ChartCategoryAxis Categories="@Categories"></ChartCategoryAxis>
                    </ChartCategoryAxes>

                </TelerikChart>
            </div>
        </TelerikCard>
    </div>
</div>
<div class="d-flex flex-lg-row flex-column mt-3 gap-3 mb-4 equal-height-columns">
    <div class="col">
        <TelerikCard Width="100%">
            <CardHeader Class="ch-card">
                <h5 class="mb-0">Monthly Request Average Time</h5>
            </CardHeader>
            <div class="container my-3">
                <TelerikChart Width="100%" @ref="MonthlyAveTimeRef">
                    <ChartTooltip Visible="true"></ChartTooltip>
                    <ChartLegend Position="ChartLegendPosition.Bottom"></ChartLegend>

                    <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Line"
                                     Name="HRMD"
                                     Data="@MockData.MonthlyRequestAverageTimeList()"
                                     Field="@nameof(ModelData.Series1)">
                        </ChartSeries>
                        <ChartSeries Type="ChartSeriesType.Line"
                                     Name="RMD"
                                     Data="@MockData.MonthlyRequestAverageTimeList()"
                                     Field="@nameof(ModelData.Series3)">
                        </ChartSeries>
                        <ChartSeries Type="ChartSeriesType.Line"
                                     Name="Combined"
                                     Data="@MockData.MonthlyRequestAverageTimeList()"
                                     Color="#eb4a1f"
                                     Field="@nameof(ModelData.Series2)">
                        </ChartSeries>
                    </ChartSeriesItems>

                    <ChartCategoryAxes>
                        <ChartCategoryAxis Categories="@Categories"></ChartCategoryAxis>
                    </ChartCategoryAxes>

                    <ChartValueAxes>
                        <ChartValueAxis Max="@XAxisMax" Name="my-value-axis">
                            <ChartValueAxisLabels Format="# 'days'"></ChartValueAxisLabels>
                        </ChartValueAxis>
                    </ChartValueAxes>
                </TelerikChart>
            </div>
        </TelerikCard>
    </div>
    <div class="col">
        <TelerikCard Width="100%"  >
            <CardHeader Class="ch-card">
                <h5 class="mb-0">Top 10 Requests</h5>
            </CardHeader>
            <div class="container my-3">
         
               @*  <TelerikChart>
                    <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Column"
                                     Data="@GetTopRequestList"
                                     Field="@nameof(GetTopRequestQueryModel.Total)"
                                     CategoryField="@nameof(GetTopRequestQueryModel.RecordName)"
                                     DrilldownField="@nameof(GetTopRequestQueryModel.Total)">
                        </ChartSeries>
                    </ChartSeriesItems>
                    <ChartLegend Position="@ChartLegendPosition.Bottom" />
                </TelerikChart> *@

                <TelerikGrid Height="400px" Data="@GetTopRequestList" Pageable="false" Groupable="false" Sortable="true" Resizable="true">
                    <GridColumns>
                        <GridColumn Field="@nameof(GetTopRequestQueryModel.RecordName)" Title="Document Name" Width="@(XSmall ? null : "255px")"></GridColumn>
                        <GridColumn Field="@nameof(GetTopRequestQueryModel.Total)" Title="Total Request">
                            <Template>
                                @{
                                    var ctx = context as GetTopRequestQueryModel;

                                    <TelerikProgressBar Value="@(ctx!.Total)" Max="@GetHighestPercentageItem()" AriaLabel="Progress Bar">
                                        <ProgressBarLabel Context="ctx" Visible="true" Position="@ProgressBarLabelPosition.Center">
                                            <Template>
                                                @(ctx.Value)
                                            </Template>
                                        </ProgressBarLabel>
                                    </TelerikProgressBar>
                                }
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </TelerikGrid>
            </div>
        </TelerikCard>
    </div>
</div>
 
}
<style>
    .ch-card {
        background-color: transparent;
        border-width: 0px 0px 1px 0px;
    }

        .ch-card .k-card-header {
            border-style: none;
            background-color: transparent;
        }

    .ch-card-flex {
        border: none;
        background-color: transparent;
    }

    h1 {
        color: #38339B;
    }

    .ov-circle {
        color: white;
        border: 1px black;
        text-align: center;
        padding: .20rem .5rem .20rem .5rem;
        margin-left: .50rem;
        border-radius: 50%;
        background: #38339B;
        font-weight: 400;
    }

    .inspectionBanner {
        padding-right: 4rem
    }

    .home-grid .k-grid-content {
      
        overflow-y: hidden;
    }

     .home-grid .k-grid-header, .k-grid-footer {
        
        padding-inline-end: 0px;
        
    }

    .k-grid .k-table-row {
        cursor: pointer;
    }
</style>