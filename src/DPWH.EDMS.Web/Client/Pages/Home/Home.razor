@page "/"
@using DPWH.EDMS.Api.Contracts
@using DPWH.EDMS.Components.Helpers

@attribute [Authorize(Roles = "dpwh_superadmin, system_admin, dpwh_enduser")]
@inherits HomeBase

<TelerikMediaQuery Media="(max-width: 480px)" OnChange="((changed) => XSmall = changed)"></TelerikMediaQuery>
<TelerikMediaQuery Media="(max-width: 960px)" OnChange="((changed) => Small = changed)"></TelerikMediaQuery>
<TelerikMediaQuery Media="(max-width: 1280px)" OnChange="((changed) => Medium = changed)"></TelerikMediaQuery>
<TelerikMediaQuery Media="(min-width: 1281px)" OnChange="((changed) => Large = changed)"></TelerikMediaQuery>

<EdmsLoader Visible="IsLoading" />

<TelerikCard Width="100%" Class="ch-card mb-4">
    <CardHeader Class="ch-card">
        <h3 class="mb-0">Overview </h3>
    </CardHeader>
</TelerikCard>
<TelerikCard Width="100%">
    <div class="row">
        <div class="col-lg-8">
            <div class="col d-flex flex-row flex-wrap gap-3">
                @foreach (var status in OverviewTotal)
                {
                    <TelerikCard Class="ch-card-flex flex-grow-1">
                        <CardHeader Class="ch-card-flex">
                            <h6 style="font-size: 12px;" class="mb-0">@status.Id</h6>
                            <h1 class="mb-0">@status.Name</h1>
                        </CardHeader>
                    </TelerikCard>
                }
            </div>
        </div>
        <div class="col-lg-4 d-flex flex-wrap flex-row justify-content-center align-content-center">
            <img class="inspectionBanner" src="_content/DPWH.EDMS.Components/images/inspection-banner.svg" alt="inspection-banner" />
        </div>
    </div>
    
</TelerikCard>
<div class="d-flex flex-row mt-3">
    <TelerikCard Width="100%">
        <CardBody>
            <div class="d-flex flex-row justify-content-between">
                <CardTitle Class="mb-0">Request History</CardTitle>
                <TelerikButton Title="View All" Icon="@FontIcon.ChevronRight"></TelerikButton>
            </div>
            <CardSeparator Class="my-2"></CardSeparator>
            <div class="mobile-property-grid">
                @if (XSmall)
                {
                    <div class="col mx-2 my-3">
                        <div class="row mb-2">
                            <input class="form-control" @bind-value="TextSearchControlNumber" @onchange="async() => await SearchFilter()" @bind-value:event="oninput" placeholder="Search Control No." />
                        </div>
                       
                        <div class="row mb-2">
                            <input class="form-control" @bind-value="TextSearchFullName" @onchange="async() => await SearchFilter()" @bind-value:event="oninput" placeholder="Search Full Name" />
                        </div>
                        <div class="row mb-2">
                            
                            <div class="d-flex justify-content-start mb-2">
                                Search Date Requested
                            </div>
                            <CardSeparator Class="my-2"></CardSeparator>
                            <div class="d-flex justify-content-center">
                                <TelerikDatePicker @bind-Value="@SelectedDate"
                                                   Format="MMMM dd, yyyy"
                                                   OnChange="@SearchFilter"
                                                   ShowWeekNumbers="true">
                                    <DatePickerFormatPlaceholder Day="day" Month="month" Year="year" />
                                </TelerikDatePicker>
                                 
                            </div>
                        </div>
                        <div class="row mb-2">
                           
                            <div class="d-flex justify-content-center">
                                <TelerikDropDownList @bind-Value="@TextSearchStatus"
                                                     OnChange="@OnStatusFilterChangeHandler"
                                                     Data="@StatusList"
                                                     TItem="string"
                                                     TValue="string" 
                                                     DefaultText="Select Status">
                                </TelerikDropDownList>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-12 p-0 my-3">
                        <div class="d-flex flex-row gap-3">
                            <div class="form-control">
                                <div class="d-flex justify-content-start mb-2">
                                    Search Control Number
                                </div>
                                <input class="form-control" @bind-value="TextSearchControlNumber" @onchange="async() => await SearchFilter()" @bind-value:event="oninput" />
                            </div>
                            <div class="form-control">
                                <div class="d-flex justify-content-start mb-2">
                                    Search Full Name
                                </div>
                                <input class="form-control" @bind-value="TextSearchFullName" @onchange="async() => await SearchFilter()" @bind-value:event="oninput" />
                            </div>
                            <div class="form-control">
                                <div class="d-flex justify-content-start mb-2">
                                    Select Date Requested
                                </div>
                                <CardSeparator Class="my-2"></CardSeparator>
                                <div class="d-flex justify-content-center">
                                    <TelerikDatePicker @bind-Value="@SelectedDate"
                                                       Format="MMMM dd, yyyy"
                                                       OnChange="@SearchFilter"
                                                       ShowWeekNumbers="true">
                                        <DatePickerFormatPlaceholder Day="day" Month="month" Year="year" />
                                    </TelerikDatePicker>

                                </div>
                            </div>
                           <div class="form-control">
                                <div class="d-flex justify-content-start mb-2">
                                    Select Status
                                </div>
                                <div class="d-flex justify-content-center">
                                    <TelerikDropDownList @bind-Value="@TextSearchStatus"
                                                         OnChange="@OnStatusFilterChangeHandler"
                                                         Data="@StatusList"
                                                         TItem="string"
                                                         TValue="string"
                                                         DefaultText="Select Status">
                                    </TelerikDropDownList>
                                </div>
                           </div>
                        </div>
                    </div>
                }
                @if (GridData != null && !XSmall)
                {
                    <TelerikGrid TItem="EmployeeModel"
                                 @bind-PageSize="@PageSize"
                                 Height="@GridHeight" 
                                 Sortable=true
                                 Data="GridData"
                                 OnStateChanged="@OnStateChanged"
                                 @ref="GridRef"
                                Context="employee">
                        <GridSettings>
                            <GridPagerSettings PageSizes="@PageSizes">
                            </GridPagerSettings>
                        </GridSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(EmployeeModel.ControlNumber) Title="Control No." Filterable = "false" />
                            <GridColumn Field=@nameof(EmployeeModel.FullName) Title="Full Name" />
                            <GridColumn Field=@nameof(EmployeeModel.DateRequested) DisplayFormat="{0:MMMM dd, yyyy}" Title="Date Requested" />
                            <GridColumn Field=@nameof(EmployeeModel.Status) Title="Status" />
                        </GridColumns>
                    </TelerikGrid>
                }
                else if (GridData != null && XSmall)
                {
                    <TelerikGrid TItem="EmployeeModel"
                                 @bind-PageSize="@PageSize"
                                 Height="@GridHeight" 
                                 Sortable=true
                                 Data="GridData"
                                 OnStateChanged="@OnStateChanged"
                                 @ref="GridRef"
                                Context="employee">
                        <GridSettings>
                            <GridPagerSettings PageSizes="@PageSizes">
                            </GridPagerSettings>
                        </GridSettings>
                        <DetailTemplate>
                            @{
                                var prop = employee as EmployeeModel;
                                <div class="d-flex flex-column">
                                    <p><b>Control Number :</b> @prop.ControlNumber </p>
                                    <p><b>Full Name :</b> @prop.FullName </p>
                                    <p><b>Date Requested :</b> @GenericHelper.GetDateDisplay(prop.DateRequested) </p>
                                    <p><b>Status :</b> @prop.Status </p>
 
                                </div>
                            }
                        </DetailTemplate>
                        <GridColumns>
                            <GridColumn Field=@nameof(EmployeeModel.FullName) />
                        </GridColumns>
                    </TelerikGrid>
                }
                else
                {
                    <span>No Data to display.</span>
                }
            </div>
            <TelerikPager PageChanged="@PageChangedHandler"
                          Total="TotalItems"
                          ButtonCount="6"
                          PageSize="@PageSize"
                          PageSizeChanged="@PageSizeChangedHandler"
                          PageSizes="@(new List<int?> {5, 10, 20})"
                          Page="@Page">
            </TelerikPager>
        </CardBody>
    </TelerikCard>
</div>
<div class="d-flex flex-lg-row flex-column mt-3 gap-3">
        <div class="col">
            <TelerikCard Width="100%">
                <CardHeader Class="ch-card">
                    <h5 class="mb-0">Overview Status </h5>
                </CardHeader>
                <div class="container">
                    <TelerikChart Class="PieChart" @ref="FullfilledChartRef">
                        <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Pie" Data="@OverviewTotal"
                                     Field="@nameof(SimpleKeyValue.Name)" CategoryField="@nameof(SimpleKeyValue.Id)">
                            <ChartSeriesTooltip Visible="true">
                                <Template>
                                    @((context.DataItem as SimpleKeyValue).Id) for @((context.DataItem as SimpleKeyValue).Name)
                                </Template>
                            </ChartSeriesTooltip>
                                <ChartSeriesLabels Position="ChartSeriesLabelsPosition.Center"
                                                   Visible="true"
                                                   Font="16px 'Times New Roman'"
                                                   Background="transparent"></ChartSeriesLabels>
                            </ChartSeries>
                        </ChartSeriesItems>
                        @if (XSmall)
                        {
                            <ChartLegend Position="ChartLegendPosition.Bottom">

                            </ChartLegend>
                        }
                        else
                        {
                            FullfilledChartRef.Refresh();
                            <ChartLegend Position="ChartLegendPosition.Right">

                            </ChartLegend>
                        }
                </TelerikChart>
                </div>
            </TelerikCard>
        </div>
        <div class="col">
            <TelerikCard Width="100%">
                <CardHeader Class="ch-card">
                    <h5 class="mb-0">Monthly Requests </h5>
                </CardHeader>
                <div class="container">
                <TelerikChart>
                    <ChartTooltip Visible="true"></ChartTooltip>
                    <ChartLegend Visible="false"></ChartLegend>

                    <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Bar" Name="Total Visits" Data="@Series1Data">
                        </ChartSeries>
                    </ChartSeriesItems>

                    <ChartValueAxes>
                        <ChartValueAxis Max="1000"></ChartValueAxis>
                    </ChartValueAxes>

                    <ChartCategoryAxes>
                        <ChartCategoryAxis Categories="@Categories"></ChartCategoryAxis>
                    </ChartCategoryAxes>

                </TelerikChart>
                </div>
            </TelerikCard>
        </div>
    </div>

<style>
    .ch-card {
        background-color: transparent;
        border-width: 0px 0px 1px 0px;
    }
        .ch-card .k-card-header {
            border-style: none;
            background-color: transparent;
        }

    .ch-card-flex{
        border: none;
        background-color: transparent;
    }
    h1{
        color: #38339B;
    }

    .ov-circle{
        color: white;
        border:1px black;
        text-align: center;
        padding: .20rem .5rem .20rem .5rem;
        margin-left: .50rem;
        border-radius: 50%;
        background: #38339B;
        font-weight: 400;
    }

    .inspectionBanner{
        padding-right: 4rem
    }
</style>