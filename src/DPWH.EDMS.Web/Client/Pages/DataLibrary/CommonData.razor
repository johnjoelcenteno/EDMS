@page "/data-library/{Id}"
@inherits CommonDataBase
@attribute [Authorize(Policy = "RequireActiveRoles")]
@using DPWH.EDMS.Api.Contracts
@using DPWH.EDMS.Client.Shared.Models
@using DPWH.EDMS.Web.Client.Pages.DataLibrary.DataLibraryRequestForm

<TelerikMediaQuery Media="(max-width: 480px)" OnChange="((changed) => XSmall = changed)"></TelerikMediaQuery>

<EdmsBreadcrumbs Data="@BreadcrumbItems" />

<EdmsLoader Visible="@IsLoading" />

<h3>@UriName</h3>
<CardSeparator Class="mb-3" />

<div class="container-fluid">
    <div class="d-flex flex-row">
        <TelerikCard Width="100%">
            <CardBody>
                <div class="mobile-property-grid">
                    @if (GridData != null && !XSmall)
                    {
                        <TelerikContextMenu @ref="@ContextMenuRef" Data="@MenuItems" OnClick="@((GridMenuItemModel item) => OnItemClick(item))"></TelerikContextMenu>
                        <TelerikGrid TItem="GetDataLibraryResultValue"
                                     @bind-PageSize="@PageSize"
                                     Height="@GridHeight"
                                     Sortable=true
                                     Pageable=true
                                     FilterMode="@GridFilterMode.FilterRow"
                                     Data="GetDataLibrary.Data">
                            <GridSettings>
                                <GridPagerSettings PageSizes="@PageSizes">
                                </GridPagerSettings>
                            </GridSettings>
                            <GridToolBarTemplate>
                                <span class="k-toolbar-spacer"></span>
                                <TelerikButton Icon="@FontIcon.Plus" ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)" OnClick="@AddUser">Add</TelerikButton>
                            </GridToolBarTemplate>
                            <GridColumns>
                                <GridColumn Field=@nameof(DataManagementModel.Value) Title="Value" />
                                <GridColumn Field=@nameof(DataManagementModel.CreatedBy) Title="Created By" />
                                <GridCommandColumn Width="50px">
                                    <TelerikButton Icon="@FontIcon.MoreVertical" OnClick="@( (MouseEventArgs e) => ShowRowOptions(e, context as GetDataLibraryResultValue) )"></TelerikButton>
                                </GridCommandColumn>
                            </GridColumns>
                        </TelerikGrid>
                    }
                    else if (GridData != null && XSmall)
                    {
                        <TelerikContextMenu @ref="@ContextMenuRef" Data="@MenuItems" OnClick="@((GridMenuItemModel item) => OnItemClick(item))"></TelerikContextMenu>
                        <TelerikGrid TItem="GetDataLibraryResultValue"
                                     @bind-PageSize="@PageSize"
                                     Height="@GridHeight"
                                     FilterMode="@GridFilterMode.FilterRow"
                                     Sortable=true
                                     Pageable=true
                                     Data="GetDataLibrary.Data">
                            <GridSettings>
                                <GridPagerSettings PageSizes="@PageSizes">
                                </GridPagerSettings>
                            </GridSettings>
                            <GridToolBarTemplate>
                                <span class="k-toolbar-spacer"></span>

                                <TelerikButton Icon="@FontIcon.Plus" OnClick="@AddUser">Add</TelerikButton>
                            </GridToolBarTemplate>
                            <DetailTemplate>
                                @{
                                    var prop = context as GetDataLibraryResultValue;
                                    <div class="d-flex flex-column">
                                        <p><b>Name:</b> @prop.Value </p>
                                        <p><b>Created By:</b> @prop.CreatedBy </p>
                                    </div>
                                }
                            </DetailTemplate>
                            <GridColumns>
                                <GridColumn Field=@nameof(GetDataLibraryResultValue.Value) />
                                <GridCommandColumn Width="50px">
                                    <TelerikButton Icon="@FontIcon.MoreVertical" OnClick="@( (MouseEventArgs e) => ShowRowOptions(e, context as GetDataLibraryResultValue) )"></TelerikButton>
                                </GridCommandColumn>
                            </GridColumns>
                        </TelerikGrid>
                    }
                    else
                    {
                        <span>No Data to display.</span>
                    }
                </div>
            </CardBody>
        </TelerikCard>
    </div>
</div>

<div class="modal">
    <TelerikDialog @ref="dialogReference" @bind-Visible="@IsOpen" Title="@($"{getOpenbtn} Config")" Width="50%"  >
        <DialogContent>
            @switch (getOpenbtn)
            {
                case "Add":
                    <DataLibraryRequestForm HandleOnCancel="OnCancel" HandleCreateOnSubmit="OnSave" DataType="@DataType" Type="Add" EditItem="@NewConfig" />
                    break;
                case "Edit":
                    <DataLibraryRequestForm HandleOnCancel="OnCancel" HandleCreateOnSubmit="OnUpdateItem" DataType="@DataType" Type="Edit" EditItem="@NewConfig" />
                    break;
                default:
                    break;
            }
            
            @* <TelerikForm Model="@NewConfig" @ref="FormRef">
                <FormValidation>
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                </FormValidation>
                <FormItems>
                    <FormItem>
                        <Template>
                            <div class="row g-3 mb-3">
                                <div class="col-md-12">
                                    <label class="mb-2" for="Name">Value*</label>
                                    <TelerikTextBox Size="@ThemeConstants.Button.Size.Large" Id="Value" @bind-Value="@NewConfig.Value" PlaceHolder="Value"></TelerikTextBox>
                                    <ValidationMessage Class="text-danger" For="@(() => NewConfig.Value)" />
                                </div>
                                @if (DataType == "EmployeeRecords")
                                {
                                    <div class="col-md-12">
                                        <label class="mb-2" for="Section">Section*</label>
                                        <TelerikDropDownList Data="@SectionList"
                                                             @bind-Value="NewConfig.Section"
                                                             ValueField="string"
                                                             TextField="string"
                                                             DefaultText="Select"
                                                             OnChange="SectionDropdownErrorChecker" />
                                        <label class="@(IsSectionEmpty ? "text-danger" : "d-none")">Please specify the Section</label>
                                    </div>
                                    <div class="col-md-12">
                                        <label class="mb-2" for="Name">Office*</label>
                                        <TelerikDropDownList Data="@OfficeList"
                                                             @bind-Value="NewConfig.Office"
                                                             ValueField="string"
                                                             TextField="string"
                                                             DefaultText="Select"
                                                             OnChange="OfficeDropdownErrorChecker" />
                                        <label class="@(IsOfficeEmpty ? "text-danger" : "d-none")">Please specify the Office</label>
                                    </div>
                                }
                            </div>
                        </Template>
                    </FormItem>
                </FormItems>
                <FormButtons></FormButtons>
            </TelerikForm> *@
        </DialogContent>

    </TelerikDialog>
</div>

<TelerikDialog @bind-Visible="@IsConfirm" Title="Confirmation">
    <DialogContent>
        <p class="text-center">Are you sure you want to <span class="delete">delete</span>  <span class="name">@NewConfig.Value</span></p>
    </DialogContent>
    <DialogButtons>
        <TelerikButton OnClick="@(() => { IsConfirm = false; })">Cancel</TelerikButton>
        <TelerikButton ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)" OnClick="@(() => OnDeleteItem(ItemId))">Yes</TelerikButton>
    </DialogButtons>
</TelerikDialog>

<style>
    .datalibrary .k-dialog > .k-dialog-actions {
        display: none;
    }
</style>