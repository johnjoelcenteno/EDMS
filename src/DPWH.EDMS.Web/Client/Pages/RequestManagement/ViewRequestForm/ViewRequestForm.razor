@page "/request-management/view-request-form/{RequestId}"
@inherits ViewRequestFormBase
@using DPWH.EDMS.Client.Shared.Models
@using DPWH.EDMS.Components.Helpers
@using DPWH.EDMS.Shared.Enums
@using DPWH.EDMS.IDP.Core.Extensions

<TelerikMediaQuery Media="(max-width: 480px)" OnChange="((changed) => XSmall = changed)"></TelerikMediaQuery>
<EdmsBreadcrumbs Data="@BreadcrumbItems" />
<EdmsLoader Visible="IsLoading" />

<h3>View Request Form</h3>

<div class="d-flex flex-row align-items-center mb-2">
    <p>Control Number: @SelectedRecordRequest.ControlNumber | Name: @SelectedRecordRequest.FullName</p>
</div>
<div class="d-flex flex-row align-items-center mb-2">
    <div class="row">
        <p>RMD Request Status : <span class="fw-bolder">@SelectedRecordRequest.RmdRequestStatus</span></p>
        <p>HRMD Request Status : <span class="fw-bolder">@SelectedRecordRequest.HrmdRequestStatus</span></p>
    </div>
</div>
<hr />
<TelerikTabStrip @bind-ActiveTabIndex="@ActiveTabIndex">
    <TabStripTab Title="Overview">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Request Details</h5>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <p><b>Status</b></p>
                        <p>@SelectedRecordRequest.Status</p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <p><b>Control Number</b></p>
                        <p>@SelectedRecordRequest.ControlNumber</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <p><b>Employee Number</b></p>
                        <p>@SelectedRecordRequest.EmployeeNumber</p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <p><b>Employee Name</b></p>
                        <p>@SelectedRecordRequest.FullName</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <p><b>Office</b></p>
                        <p>Human Resource and Administrative Office</p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <p><b>Date Requested</b></p>
                        <p>@GenericHelper.GetDateDisplay(@SelectedRecordRequest.DateRequested)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <p class="mb-1"><b>Record(s) Requested</b></p>
                        @if (User.Office == Offices.RMD.ToString() && RMDRecords != null)
                        {
                            <p><b>@Offices.RMD.ToString()</b></p>
                            <ul>
                                @foreach (var record in RMDRecords)
                                {
                                    <li>@record.RecordType</li>
                                }
                            </ul>
                        }
                        else if (User.Office == Offices.HRMD.ToString() && HRMDRecords != null)
                        {
                            <p><b>@Offices.HRMD.ToString()</b></p>
                            <ul>
                                @foreach (var record in HRMDRecords)
                                {
                                    <li>@record.RecordType</li>
                                }
                            </ul>
                        }
                        else
                        {
                            if (SelectedRecordRequest.RequestedRecords != null && SelectedRecordRequest.RequestedRecords.Count > 0 && GroupedRecords != null)
                            {
                                @foreach (var office in GroupedRecords)
                                {
                                    <p><b>@office.Key</b></p>
                                    <ul>
                                        @foreach (var record in office)
                                        {
                                            <li>@record.RecordType</li>
                                        }
                                    </ul>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="row mb-3">
                    <p><b>Purpose</b></p>
                    <p>@(SelectedRecordRequest.Purpose == "Other" ? $"Other - {SelectedRecordRequest.OtherPurpose}" : SelectedRecordRequest.Purpose)</p>
                </div>
                <div class="row mb-3">
                    <p><b>Remarks</b></p>
                    <div class="col mt-2">
                        <TelerikTextArea @bind-Value="Remarks"></TelerikTextArea>
                    </div>
                </div>
            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="Review and Evaluate">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        @if (User.Office == Offices.RMD.ToString())
                        {
                            <TelerikButton OnClick="@(() => IsRecordUploadEnabled = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString() && IsRecordUploadEnabled == false)">Edit</TelerikButton>
                            <TelerikButton OnClick="OnSubmitReview" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() || IsRecordUploadEnabled == true)">Submit</TelerikButton>                            
                        }
                        else if (User.Office == Offices.HRMD.ToString())
                        {
                            <TelerikButton OnClick="@(() => IsRecordUploadEnabled = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString() && IsRecordUploadEnabled == false)">Edit</TelerikButton>
                            <TelerikButton OnClick="OnSubmitReview" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() || IsRecordUploadEnabled == true)">Submit</TelerikButton>
                        }
                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Record(s) Requested</h5>
                </div>
                <div class="row mb-3">
                    <p>Kindly upload the Certified True Copies of the selected document/s. If document is unavailable, a Certification of No Record is generated in its stead.</p>
                </div>
                <div class="row mb-2">
                    <p><b>Documents</b></p>
                </div>
                @if (User.Office == Offices.RMD.ToString() && RMDRecords != null)
                {
                    <div class="row mb-2">
                        <p><b>RMD</b></p>
                    </div>

                    foreach (var record in RMDRecords)
                    {
                        <div class="row mb-1">
                            <div class="d-flex col">
                                <label class="align-content-center">@record.RecordType</label>
                            </div>
                            @if (SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() || IsRecordUploadEnabled == true)
                            {
                                <div class="col-2 align-content-center">
                                    <TelerikRadioGroup Data="@RecordCopyTypeData"
                                                       @bind-Value="record.DocumentType"
                                                       TextField="@nameof(RecordCopyTypeItem.Text)"
                                                       ValueField="@nameof(RecordCopyTypeItem.Value)"
                                                       OnChange="@(() => OnCopyTypeChanged(record.Id))"
                                                       Layout="RadioGroupLayout.Horizontal"
                                                       Enabled="@(IsFileSelected(record.Id))">
                                    </TelerikRadioGroup>
                                </div>

                                <div class="col">
                                    <TelerikFileSelect Class="@(XSmall ? "mb-3" : "record-upload-btn")"
                                                       AllowedExtensions="@AllowedExtensions"
                                                       OnSelect="(args) => OnSelectDocument(args, record.Id)"
                                                       OnRemove="(args) => OnRemoveDocument(args, record.Id)"
                                                       MaxFileSize="@MaxFileSize"
                                                       MinFileSize="@MinFileSize"
                                                       Multiple="false"
                                                       Enabled="@IsRecordUploadEnabled">
                                        <SelectFilesButtonTemplate>
                                            <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                            Select Record
                                        </SelectFilesButtonTemplate>
                                    </TelerikFileSelect>
                                </div>
                            }
                            else if (record.Uri != null && record.DocumentType != null)
                            {
                                <div class="col-2 text-center">
                                    <p><b>@(record.DocumentType == "TC" ? "True Copy" : "Machine Copy")</b></p>
                                </div>
                                <div class="col-3 text-center">
                                    <NavLink class="fw-bolder" href="@record.Uri" target="_blank">View</NavLink>
                                </div>
                            }
                            else
                            {
                                <div class="col-3 text-center">
                                    <p><b>No Record</b></p>
                                </div>
                            }
                        </div>
                    }
                    <div class="@(XSmall ? "text-danger mb-3" : "text-danger text-end mb-3")">
                        <p>@RecordCopyValidation</p>
                    </div>
                }
                else if (User.Office == Offices.HRMD.ToString() && HRMDRecords != null)
                {
                    <div>
                        <p class="mb-2"><b>HRMD</b></p>
                    </div>

                    foreach (var record in HRMDRecords)
                    {
                        <div class="row mb-1">
                            <div class="d-flex col">
                                <label class="align-content-center">@record.RecordType</label>
                            </div>
                            @if (SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() || IsRecordUploadEnabled == true)
                            {
                                <div class="col-2 align-content-center">
                                    <TelerikRadioGroup Data="@RecordCopyTypeData"
                                                       @bind-Value="record.DocumentType"
                                                       TextField="@nameof(RecordCopyTypeItem.Text)"
                                                       ValueField="@nameof(RecordCopyTypeItem.Value)"
                                                       OnChange="@(() => OnCopyTypeChanged(record.Id))"
                                                       Layout="RadioGroupLayout.Horizontal"
                                                       Enabled="@(IsFileSelected(record.Id))">
                                    </TelerikRadioGroup>
                                </div>

                                <div class="col">
                                    <TelerikFileSelect Class="@(XSmall ? "mb-3" : "record-upload-btn")"
                                                       AllowedExtensions="@AllowedExtensions"
                                                       OnSelect="(args) => OnSelectDocument(args, record.Id)"
                                                       OnRemove="(args) => OnRemoveDocument(args, record.Id)"
                                                       MaxFileSize="@MaxFileSize"
                                                       MinFileSize="@MinFileSize"
                                                       Multiple="false"
                                                       Enabled="@IsRecordUploadEnabled">
                                        <SelectFilesButtonTemplate>
                                            <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                            Select Record
                                        </SelectFilesButtonTemplate>
                                    </TelerikFileSelect>
                                </div>
                            }
                            else if (record.Uri != null && record.DocumentType != null)
                            {
                                <div class="col-2 text-center">
                                    <p><b>@(record.DocumentType == "TC" ? "True Copy" : "Machine Copy")</b></p>
                                </div>
                                <div class="col-3 text-center">
                                    <NavLink class="fw-bolder" href="@record.Uri" target="_blank">View</NavLink>
                                </div>
                            }
                            else
                            {
                                <div class="col-3 text-center">
                                    <p><b>No Record</b></p>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    if (GroupedRecords != null)
                    {
                        foreach (var office in GroupedRecords)
                        {
                            <div class="row mb-2">
                                <p><b>@office.Key</b></p>
                            </div>
                            foreach (var record in office)
                            {
                                <div class="row mb-1">
                                    <div class="d-flex col">
                                        <label class="align-content-center">@record.RecordType</label>
                                    </div>
                                    @if ((SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() && SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString()) || IsRecordUploadEnabled == true)
                                    {
                                        <div class="col-2 align-content-center">
                                            <TelerikRadioGroup Data="@RecordCopyTypeData"
                                                               @bind-Value="record.DocumentType"
                                                               TextField="@nameof(RecordCopyTypeItem.Text)"
                                                               ValueField="@nameof(RecordCopyTypeItem.Value)"
                                                               OnChange="@(() => OnCopyTypeChanged(record.Id))"
                                                               Layout="RadioGroupLayout.Horizontal"
                                                               Enabled="@(IsFileSelected(record.Id))">
                                            </TelerikRadioGroup>
                                        </div>

                                        <div class="col">
                                            <TelerikFileSelect Class="@(XSmall ? "mb-3" : "record-upload-btn")"
                                                               AllowedExtensions="@AllowedExtensions"
                                                               OnSelect="(args) => OnSelectDocument(args, record.Id)"
                                                               OnRemove="(args) => OnRemoveDocument(args, record.Id)"
                                                               MaxFileSize="@MaxFileSize"
                                                               MinFileSize="@MinFileSize"
                                                               Multiple="false"
                                                               Enabled="@IsRecordUploadEnabled">
                                                <SelectFilesButtonTemplate>
                                                    <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                                    Select Record
                                                </SelectFilesButtonTemplate>
                                            </TelerikFileSelect>
                                        </div>
                                    }
                                    else if (record.Uri != null && record.DocumentType != null)
                                    {
                                        <div class="col-2 text-center">
                                            <p><b>@(record.DocumentType == "TC" ? "True Copy" : "Machine Copy")</b></p>
                                        </div>
                                        <div class="col-3 text-center">
                                            <NavLink class="fw-bolder" href="@record.Uri" target="_blank">View</NavLink>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-3 text-center">
                                            <p><b>No Record</b></p>
                                        </div>
                                    }
                                </div>
                            }
                        }
                    }
                }
                <div class="@(XSmall ? "text-danger mb-3" : "text-danger text-end mb-3")">
                    <p>@RequestedRecordValidation</p>
                </div>
                <div class="row mb-2">
                    <p><b>Office for Pickup</b></p>
                    <p>@PickUpLocation</p>
                </div>

            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="Approve" Disabled="@(User.Office == Offices.RMD.ToString() && ProgressIndex < 1 )" Visible="@(User.Office != Offices.HRMD.ToString())">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        @if (User.Office == Offices.RMD.ToString())
                        {
                            <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString())">Submit</TelerikButton>
                        }
                        else if (User.Office == Offices.HRMD.ToString())
                        {
                            <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString())">Submit</TelerikButton>
                        }

                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Record(s) to be Signed</h5>
                </div>
                <div class="row mb-2">
                    <p>Upload a signed copy of each document:</p>
                </div>
                @if ((string.IsNullOrEmpty(User.Office) || User.Office == Offices.RMD.ToString()) && RMDRecords != null)
                {
                    <div class="row">
                        <p><b>RMD</b></p>
                    </div>
                    foreach (var record in RMDRecords)
                    {
                        <div class="d-flex flex-row align-items-center" style="height:45px;">
                            <div classs="col">
                                <label for="@record.RecordType">@record.RecordType</label>
                            </div>
                            @if (record.Uri != null)
                            {
                                <div class="col text-end">
                                    <TelerikButton OnClick="@(() => OnDocumentOpen(record.Id.ToString()))" Enabled="@(!string.IsNullOrEmpty(User.Office))">Approve</TelerikButton>
                                </div>
                            }
                            else
                            {
                                <div class="col text-end">
                                    <p class="fw-bolder">No Record Found</p>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="row my-2">
                        <h5>No RMD Records to be Signed</h5>
                    </div>
                }
            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="Release" Disabled="@(User.Office == Offices.RMD.ToString() ? ProgressIndex < 2 : User.Office == Offices.HRMD.ToString() ? ProgressIndex < 1 : false)">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        @if (User.Office == Offices.RMD.ToString())
                        {
                            <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Approved.ToString())">Submit</TelerikButton>
                        }
                        else if (User.Office == Offices.HRMD.ToString())
                        {
                            <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString())">Submit</TelerikButton>
                        }
                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Record(s) For Release</h5>
                </div>
                @if (User.Office == Offices.RMD.ToString() && RMDRecords != null)
                {
                    <div class="row">
                        <p><b>RMD</b></p>
                    </div>
                    foreach (var record in RMDRecords)
                    {
                        <div class="d-flex flex-row align-items-center" style="height:45px;">
                            <div classs="col">
                                <label for="@record.RecordType">@record.RecordType</label>
                            </div>
                            @if (record.Uri != null)
                            {
                                HasNoRecords = false;
                                <div class="col text-end">
                                    <NavLink class="fw-bolder" href="@record.Uri" target="_blank">View</NavLink>
                                </div>
                            }
                            else
                            {
                                HasNoRecords = true;
                                <div class="col text-end">
                                    <p class="fw-bolder">No Record Found</p>
                                </div>
                            }
                        </div>
                    }
                }
                else if (User.Office == Offices.HRMD.ToString() && HRMDRecords != null)
                {
                    <div class="row">
                        <p><b>HRMD</b></p>
                    </div>
                    foreach (var record in HRMDRecords)
                    {
                        <div class="d-flex flex-row align-items-center" style="height:45px;">
                            <div classs="col">
                                <label for="@record.RecordType">@record.RecordType</label>
                            </div>
                            @if (record.Uri != null)
                            {
                                <div class="col text-end">
                                    <NavLink class="fw-bolder" href="@record.Uri" target="_blank">View</NavLink>
                                </div>
                            }
                            else
                            {
                                <div class="col text-end">
                                    <p class="fw-bolder">No Record Found</p>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    if (GroupedRecords != null)
                    {
                        foreach (var office in GroupedRecords)
                        {
                            <div class="mb-2">
                                <p><b>@office.Key</b></p>

                                @foreach (var record in office)
                                {
                                    <div class="d-flex flex-row align-items-center">
                                        <div classs="col">
                                            <label for="@record.RecordType">@record.RecordType</label>
                                        </div>
                                        @if (record.Uri != null)
                                        {
                                            <div class="col text-end">
                                                <NavLink class="fw-bolder" href="@record.Uri" target="_blank">View</NavLink>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="col text-end">
                                                <p class="fw-bolder">No Record Found</p>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                }
                @if (HasNoRecords && User.Office == Offices.RMD.ToString())
                {
                    <div class="row my-4">
                        <div class="col">
                            <p><b>CERTIFICATE OF NO RECORDS</b></p>
                        </div>
                        <div class="d-flex col gap-4 justify-content-end">
                            <NavLink class="fw-bolder" target="_blank" href="@($"certificate-of-no-records/{RequestId}")">View</NavLink>
                            <NavLink class="fw-bolder" target="_blank" href="@($"certificate-of-no-records/{RequestId}/exporting")">Export</NavLink>
                        </div>
                    </div>
                }
            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="Claim" Disabled="@(User.Office == Offices.RMD.ToString() ? ProgressIndex < 3 : User.Office == Offices.HRMD.ToString() ? ProgressIndex < 2 : false)">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        @if (User.Office == Offices.RMD.ToString())
                        {
                            <TelerikButton OnClick="ValidateTransmittalFileSelect" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.ForRelease.ToString())">Submit</TelerikButton>
                        }
                        else if (User.Office == Offices.HRMD.ToString())
                        {
                            <TelerikButton OnClick="ValidateTransmittalFileSelect" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.ForRelease.ToString())">Submit</TelerikButton>
                        }
                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Receiving Details</h5>
                </div>
                <div class="d-flex mb-3">
                    <div>
                        <p>Control No. @SelectedRecordRequest.ControlNumber</p>
                    </div>
                </div>
                <div class="hl-top hl-bottom bg-light p-3">
                    <div class="row mb-3">
                        <div>
                            <p><b>Control Number</b></p>
                            <p>@SelectedRecordRequest.ControlNumber</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-md-4 mb-3">
                            <label class="mb-1"><b>Date Received</b></label>
                            @if (GetTransmittalReceipt.Data != null)
                            {
                                <p>@GenericHelper.GetDateDisplay(GetTransmittalReceipt.Data.DateReceived)</p>
                            }
                            else
                            {
                                <TelerikDatePicker @bind-Value="@DateReceived" Placeholder="Select Date" Max="MaxDate" Enabled="!string.IsNullOrEmpty(User.Office)"></TelerikDatePicker>
                            }
                        </div>
                        <div class="col-sm-12 col-md-4 mb-3">
                            <label class="mb-1"><b>Time Received</b></label>
                            @if (GetTransmittalReceipt.Data != null)
                            {
                                <p>@GenericHelper.GetTimeDisplay(GetTransmittalReceipt.Data.TimeReceived)</p>
                            }
                            else
                            {
                                <TelerikTimePicker @bind-Value="@TimeReceived" Placeholder="Select Time" Enabled="!string.IsNullOrEmpty(User.Office)"></TelerikTimePicker>
                            }
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div>
                            <p class="mb-1"><b>Documents Received</b></p>
                            @if (User.Office == Offices.RMD.ToString() && RMDRecords != null)
                            {
                                <p>For pickup at RMD</p>
                                <ul>
                                    @foreach (var record in RMDRecords)
                                    {
                                        <li>@record.RecordType</li>
                                    }
                                </ul>
                            }
                            else if (User.Office == Offices.HRMD.ToString() && HRMDRecords != null)
                            {
                                <p>For pickup at HRMD</p>
                                <ul>
                                    @foreach (var record in HRMDRecords)
                                    {
                                        <li>@record.RecordType</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                if (SelectedRecordRequest.RequestedRecords != null && SelectedRecordRequest.RequestedRecords.Count > 0 && GroupedRecords != null)
                                {
                                    @foreach (var office in GroupedRecords)
                                    {
                                        <p><b>For pickup at @office.Key</b></p>
                                        <ul>
                                            @foreach (var record in office)
                                            {
                                                <li>@record.RecordType</li>
                                            }
                                        </ul>
                                    }
                                }
                            }
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(User.Office))
                    {
                        <div class="row mb-3">
                            <div class="col">
                                <p><b>TRANSMITTAL RECEIPT</b></p>
                            </div>
                            <div class="d-flex col gap-4 justify-content-end">
                                <NavLink class="fw-bolder" href="@($"transmittal-receipt/{RequestId}")" target="_blank">View</NavLink>
                                <NavLink class="fw-bolder" href="@($"transmittal-receipt/{RequestId}/exporting")" target="_blank">Export</NavLink>
                            </div>
                        </div>
                    }
                    @* else
                    {
                        <div class="row mb-3">
                            <div class="col">
                                <p><b>TRANSMITTAL RECEIPT UNAVAILABLE :</b></p>
                            </div>
                            <div class="d-flex col gap-4 justify-content-end">
                                <p class="d-flex fw-normal text-danger">No assigned office</p>
                            </div>
                        </div>
                    } *@
                    <div class="row mb-2">
                        <div class="col align-content-center">
                            <p><b>@(string.IsNullOrEmpty(GetTransmittalReceipt.Data?.Uri) ? "UPLOAD RECEIVED TRANSMITTAL RECEIPT" : "RECEIVED TRANSMITTAL RECEIPT")</b></p>
                        </div>
                        @if (GetTransmittalReceipt.Data != null && !string.IsNullOrEmpty(GetTransmittalReceipt.Data?.Uri))
                        {
                            <div class="col text-end">
                                <NavLink class="fw-bolder text-end" href="@GetTransmittalReceipt.Data.Uri" target="_blank">View</NavLink>
                            </div>
                        }
                        else
                        {
                            <div class="col">
                                <TelerikFileSelect AllowedExtensions="@AllowedExtensions"
                                                   OnSelect="OnSelectTransmittalReceipt"
                                                   OnRemove="OnRemoveTransmittalReceipt"
                                                   MaxFileSize="@MaxFileSize"
                                                   MinFileSize="@MinFileSize"
                                                   Multiple="false"
                                                   Enabled="@(!string.IsNullOrEmpty(User.Office))">
                                    <SelectFilesButtonTemplate>
                                        <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                        Click to Upload
                                    </SelectFilesButtonTemplate>
                                </TelerikFileSelect>
                            </div>
                        }
                    </div>
                    <div class="@(XSmall ? "text-danger mb-3" : "text-danger text-end mb-3")">
                        <p>@TransmittalValidation</p>
                    </div>
                </div>
            </div>
        </div>
    </TabStripTab>
</TelerikTabStrip>

@if (XSmall)
{
    <div class="row my-3">
        <div class="d-flex gap-3 justify-content-center">
            <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>

            @if (User.Office == Offices.RMD.ToString())
            {
                switch (ActiveTabIndex)
                {
                    case 1:
                        <TelerikButton OnClick="@(() => IsRecordUploadEnabled = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString() && IsRecordUploadEnabled == false)">Edit</TelerikButton>
                        <TelerikButton OnClick="OnSubmitReview" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() || IsRecordUploadEnabled == true)">Submit</TelerikButton>
                        break;
                    case 2:
                        <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString())">Submit</TelerikButton>
                        break;
                    case 3:
                        <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.Approved.ToString())">Submit</TelerikButton>
                        break;
                    case 4:
                        <TelerikButton OnClick="ValidateTransmittalFileSelect" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.RmdRequestStatus == OfficeRequestedRecordStatus.ForRelease.ToString())">Submit</TelerikButton>
                        break;
                    default:
                        break;
                }                
            }
            else if (User.Office == Offices.HRMD.ToString())
            {
                switch (ActiveTabIndex)
                {
                    case 1:
                        <TelerikButton OnClick="@(() => IsRecordUploadEnabled = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString() && IsRecordUploadEnabled == false)">Edit</TelerikButton>
                        <TelerikButton OnClick="OnSubmitReview" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Submitted.ToString() || IsRecordUploadEnabled == true)">Submit</TelerikButton>
                        break;
                    case 2:
                        <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.Reviewed.ToString())">Submit</TelerikButton>
                        break;
                    case 3:
                        <TelerikButton OnClick="ValidateTransmittalFileSelect" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.HrmdRequestStatus == OfficeRequestedRecordStatus.ForRelease.ToString())">Submit</TelerikButton>
                        break;
                    default:
                        break;
                }
            }
        </div>
    </div>
}

<TelerikWindow Modal="true"
               Width="400px"
               @bind-Visible="@IsModalVisible"
               CloseOnOverlayClick="true">
    <WindowTitle>
        Please Confirm
    </WindowTitle>
    <WindowContent>
        @switch (ActiveTabIndex)
        {
            case 1:
                <div class="row mb-3">
                    <p><b>Request has been reviewed and evaluated.</b></p>
                    <p class="text-secondary">Confirm to proceed to record signing and approval.</p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="OnReview" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            case 2:
                <div class="row mb-3">
                    <p><b>Request has been signed and approved.</b></p>
                    <p>Once confirmed, you can no longer reupload records.</p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="OnApprove" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            case 3:
                <div class="row mb-3">
                    <p><b>Records are now ready for release.</b></p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="OnRelease" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            case 4:
                <div class="row mb-3">
                    <p><b>Request has been claimed.</b></p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="OnClaim" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            default:
                break;
        }
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

@code {
    private RenderFragment StepperFragment => @<div>
        <div class="row my-2">
            <h5>Processing Status</h5>
        </div>
        <TelerikStepper Value="@ProgressIndex" ValueChanged="@ValueChangeHandler" Linear="true" Orientation="@(!XSmall ? StepperOrientation.Vertical: StepperOrientation.Horizontal)">
            <StepperSteps>
                @if (string.IsNullOrEmpty(User.Office) || User.Office == Offices.RMD.ToString())
            {
                <StepperStep Label="Submit"></StepperStep>
                <StepperStep Label="Review & Evaluate"></StepperStep>
                <StepperStep Label="Approve"></StepperStep>
                <StepperStep Label="Release"></StepperStep>
                <StepperStep Label="Claim"></StepperStep>
            }
            else if (User.Office == Offices.HRMD.ToString())
            {
                <StepperStep Label="Submit"></StepperStep>
                <StepperStep Label="Review & Evaluate"></StepperStep>
                <StepperStep Label="Release"></StepperStep>
                <StepperStep Label="Claim"></StepperStep>
            }
            </StepperSteps>
        </TelerikStepper>
    </div>;
}

<style>
    .vl-right {
        border-right: 1px solid rgba(0, 0, 0, .15);
    }

    .hl-top {
        border-top: 1px solid rgba(0, 0, 0, .05);
    }

    .hl-bottom {
        border-bottom: 1px solid rgba(0, 0, 0, .05);
    }

    .k-stepper .k-step-label {
        display: inline-block;
    }

    .upload-btn {
        border: 1px solid rgba(0, 0, 0, .20);
        border-radius: 3px;
        padding: 3px 12px;
    }

    .toggle-button {
        width: 20px;
        height: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        cursor: pointer;
        user-select: none;
        display: inline-flex;
        line-height: 30px;
        text-align: center;
        align-items: center;
        justify-content: center;
    }

    .view-export-btn {
        border: none;
        color: #005A9C;
        text-decoration: none;
    }

    .record-upload-btn {
        width: 336px;
    }
</style>