@page "/request-management/view-request-form/{RequestId}"
@inherits ViewRequestFormBase
@using DPWH.EDMS.Components.Helpers
@using DPWH.EDMS.Shared.Enums

<TelerikMediaQuery Media="(max-width: 480px)" OnChange="((changed) => XSmall = changed)"></TelerikMediaQuery>
<EdmsBreadcrumbs Data="@BreadcrumbItems" />
<EdmsLoader Visible="IsLoading" />

<h3>View Request Form</h3>

<div class="d-flex flex-row align-items-center mb-2">
    <p>Control Number: @SelectedRecordRequest.ControlNumber | Name: @SelectedRecordRequest.FullName</p>
</div>

<hr />
<TelerikTabStrip @bind-ActiveTabIndex="@ActiveTabIndex">
    <TabStripTab Title="Overview">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Request Details</h5>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <p><b>Status</b></p>
                        <p>@SelectedRecordRequest.Status</p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <p><b>Control Number</b></p>
                        <p>@SelectedRecordRequest.ControlNumber</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <p><b>Employee Number</b></p>
                        <p>@SelectedRecordRequest.EmployeeNumber</p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <p><b>Employee Name</b></p>
                        <p>@SelectedRecordRequest.FullName</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <p><b>Office</b></p>
                        <p>Human Resource and Administrative Office</p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <p><b>Date Requested</b></p>
                        <p>@GenericHelper.GetDateDisplay(@SelectedRecordRequest.DateRequested)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <p class="mb-1"><b>Record(s) Requested</b></p>
                        @if (SelectedRecordRequest.RequestedRecords != null && SelectedRecordRequest.RequestedRecords.Count > 0 && GroupedRecords != null)
                        {
                            @foreach (var office in GroupedRecords)
                            {
                                <p><b>@office.Key</b></p>
                                <ul>
                                    @foreach (var recordType in office)
                                    {
                                        <li>@recordType</li>
                                    }
                                </ul>
                            }
                        }
                    </div>
                </div>
                <div class="row mb-3">
                    <p><b>Purpose</b></p>
                    <p>@SelectedRecordRequest.Purpose</p>
                </div>
                <div class="row mb-3">
                    <p><b>Remarks</b></p>
                    <div class="col mt-2">
                        <TelerikTextArea @bind-Value="Remarks"></TelerikTextArea>
                    </div>
                </div>
            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="@(!XSmall ? "Review and Evaluate" : "Review")">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.Status == RecordRequestStates.Review.ToString())">Submit</TelerikButton>
                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Record(s) Requested</h5>
                </div>
                <div class="row mb-2">
                    <p>Check availability of the documents and select available document/s:</p>
                </div>
                <div class="row">
                    <div class="col">
                        @if (Office == "RMD")
                        {
                            @foreach (var record in RMDRecords)
                            {
                                <div>
                                    <TelerikCheckBox Id="@record.RecordType" @bind-Value="@record.IsAvailable" Enabled="SelectedRecordRequest.Status == RecordRequestStates.Review.ToString()" />
                                    <label for="@record.RecordType">@record.RecordType</label>
                                </div>
                            }
                        }
                        else if (Office == "HRMD")
                        {
                            @foreach (var record in HRMDRecords)
                            {
                                <div>
                                    <TelerikCheckBox Id="@record.RecordType" @bind-Value="@record.IsAvailable" Enabled="SelectedRecordRequest.Status == RecordRequestStates.Review.ToString()" />
                                    <label for="@record.RecordType">@record.RecordType</label>
                                </div>
                            }
                        }
                        else
                        {
                            @foreach (var record in SelectedRecordRequest.RequestedRecords)
                            {
                                <div>
                                    <TelerikCheckBox Id="@record.RecordType" @bind-Value="@record.IsAvailable" Enabled="SelectedRecordRequest.Status == RecordRequestStates.Review.ToString()" />
                                    <label for="@record.RecordType">@record.RecordType</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="Release">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        <TelerikButton OnClick="ValidateRecordsFileSelect" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.Status == RecordRequestStates.Release.ToString())">Submit</TelerikButton>
                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Record(s) for Release</h5>
                </div>
                <div class="row mb-3">
                    <p>Select record(s) ready for release.</p>
                    <p>Kindly upload the Certified True Copies of the selected document/s. If document is unavailable, kindly upload the Certification of No Record in its stead.</p>
                </div>
                <div class="row mb-2">
                    <p><b>Documents</b></p>
                </div>
                @if (Office == "RMD")
                {
                    @foreach (var record in RMDRecords)
                    {
                        <div class="row mb-1">
                            <div class="d-flex col">
                                <label class="align-content-center">@record.RecordType</label>
                            </div>
                            <div class="col">
                                @if (SelectedRecordRequest.Status != RecordRequestStates.Release.ToString() && !string.IsNullOrEmpty(record.Uri))
                                {
                                    <div class="text-end">
                                        <NavLink class="telerik-blazor k-button k-button-solid k-rounded-md k-button-md k-button-solid-base" target="_blank" href=@record.Uri>View Uploaded Record</NavLink>
                                    </div>
                                }
                                else {
                                    <TelerikFileSelect Class="@(XSmall ? "mb-3" : "record-upload-btn")"
                                                       AllowedExtensions="@AllowedExtensions"
                                                       OnSelect="(args) => OnSelectDocument(args, record.Id)"
                                                       OnRemove="(args) => OnRemoveDocument(args, record.Id)"
                                                       MaxFileSize="@MaxFileSize"
                                                       MinFileSize="@MinFileSize"
                                                       Multiple="false">
                                        <SelectFilesButtonTemplate>
                                            <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                            @(record.IsAvailable ? "Select Record" : "Select Certificate of No Record")
                                        </SelectFilesButtonTemplate>
                                    </TelerikFileSelect>
                                }
                            </div>
                        </div>
                    }
                }
                else if (Office == "HRMD")
                {
                    @foreach (var record in HRMDRecords)
                    {
                        <div class="row mb-1">
                            <div class="d-flex col">
                                <label class="align-content-center">@record.RecordType</label>
                            </div>
                            <div class="col">
                                @if (SelectedRecordRequest.Status != RecordRequestStates.Release.ToString() && !string.IsNullOrEmpty(record.Uri))
                                {
                                    <div class="text-end">
                                        <NavLink class="telerik-blazor k-button k-button-solid k-rounded-md k-button-md k-button-solid-base" target="_blank" href=@record.Uri>View Uploaded Record</NavLink>
                                    </div>
                                }
                                else
                                {
                                    <TelerikFileSelect Class="@(XSmall ? "mb-3" : "record-upload-btn")"
                                                   AllowedExtensions="@AllowedExtensions"
                                                   OnSelect="(args) => OnSelectDocument(args, record.Id)"
                                                   OnRemove="(args) => OnRemoveDocument(args, record.Id)"
                                                   MaxFileSize="@MaxFileSize"
                                                   MinFileSize="@MinFileSize"
                                                   Multiple="false">
                                    <SelectFilesButtonTemplate>
                                        <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                        @(record.IsAvailable ? "Select Record" : "Select Certificate of No Record")
                                    </SelectFilesButtonTemplate>
                                </TelerikFileSelect>                                    
                                }
                            </div>
                        </div>                        
                    }
                }
                else
                {
                    @foreach (var record in SelectedRecordRequest.RequestedRecords)
                    {
                        <div class="row mb-1">
                            <div class="d-flex col">
                                <label class="align-content-center">@record.RecordType</label>
                            </div>
                            <div class="col">
                                @if (SelectedRecordRequest.Status != RecordRequestStates.Release.ToString() && !string.IsNullOrEmpty(record.Uri))
                                {
                                    <div class="text-end">
                                        <NavLink class="telerik-blazor k-button k-button-solid k-rounded-md k-button-md k-button-solid-base" target="_blank" href=@record.Uri>View Uploaded Record</NavLink>
                                    </div>
                                }
                                else
                                {
                                    <TelerikFileSelect Class="@(XSmall ? "mb-3" : "record-upload-btn")"
                                                       AllowedExtensions="@AllowedExtensions"
                                                       OnSelect="(args) => OnSelectDocument(args, record.Id)"
                                                       OnRemove="(args) => OnRemoveDocument(args, record.Id)"
                                                       MaxFileSize="@MaxFileSize"
                                                       MinFileSize="@MinFileSize"
                                                       Multiple="false">
                                        <SelectFilesButtonTemplate>
                                            <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                            @(record.IsAvailable ? "Select Record" : "Select Certificate of No Record")
                                        </SelectFilesButtonTemplate>
                                    </TelerikFileSelect>
                                }
                            </div>
                        </div>
                    }
                }
                <div class="@(XSmall ? "text-danger mb-3" : "text-danger text-end mb-3")">
                    <p>@ValidationMessage</p>
                </div>
                <div class="row mb-2">
                    <p><b>Select Office for Pickup</b></p>
                    <div class="col mt-2">
                        <TelerikTextBox @bind-Value="PickupLocation" Placeholder="Auto-Generated based on viewer's office (RMD or HRMD)" Enabled="false"></TelerikTextBox>
                    </div>
                </div>

            </div>
        </div>
    </TabStripTab>
    <TabStripTab Title="Claim">
        <div class="row">
            @if (!XSmall)
            {
                <div class="col-5 vl-right">
                    @StepperFragment
                    <div class="d-flex gap-3 justify-content-center">
                        <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                        <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.Status == RecordRequestStates.Claimed.ToString())">Submit</TelerikButton>
                    </div>
                </div>
            }
            <div class="col">
                @if (XSmall)
                {
                    <div class="row mb-3">
                        @StepperFragment
                    </div>
                    <hr />
                }
                <div class="row my-2">
                    <h5>Receiving Details</h5>
                </div>
                <div class="d-flex mb-3">
                    @* <div>
                        <button class="toggle-button">-</button>
                    </div> *@
                    <div>
                        <p>Control No. @SelectedRecordRequest.ControlNumber</p>
                    </div>
                </div>
                <div class="hl-top hl-bottom bg-light p-3">
                    <div class="row mb-3">
                        <div>
                            <p><b>Control Number</b></p>
                            <p>@SelectedRecordRequest.ControlNumber</p>
                        </div>
                    </div>
                    <div class="d-flex gap-3 mb-3">
                        <div>
                            <label><b>Date Received</b></label>
                            <TelerikDatePicker @bind-Value="@DateReceived"></TelerikDatePicker>
                        </div>
                        <div>
                            <label><b>Time Received</b></label>
                            <TelerikTimePicker @bind-Value="@TimeReceived"></TelerikTimePicker>
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div>
                            <p class="mb-1"><b>Documents Received</b></p>
                            <p>For pickup at HRMD</p>
                            <ul>
                                @foreach (var record in SelectedRecordRequest.RequestedRecords)
                                {
                                    <li>@record.RecordType</li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <p><b>TRANSMITTAL RECEIPT</b></p>
                        </div>
                        <div class="d-flex col gap-2 justify-content-end">
                            <button class="view-export-btn bg-transparent">View</button>
                            <button class="view-export-btn bg-transparent">Export</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col align-content-center">
                            <p><b>UPLOAD RECEIVED TRANSMITTAL RECEIPT</b></p>
                        </div>
                        <div class="col">
                            <TelerikFileSelect AllowedExtensions="@AllowedExtensions"
                                               OnSelect="@OnSelectTransmittal"
                                               OnRemove="@OnRemoveTransmittal"
                                               MaxFileSize="@MaxFileSize"
                                               MinFileSize="@MinFileSize"
                                               Multiple="false">
                                <SelectFilesButtonTemplate>
                                    <TelerikSvgIcon Icon="@SvgIcon.Upload" />
                                    Click to Upload
                                </SelectFilesButtonTemplate>
                            </TelerikFileSelect>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </TabStripTab>
</TelerikTabStrip>

@if (XSmall)
{
    @switch (ActiveTabIndex)
    {
        case 1:
            <div class="row my-3">
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.Status == RecordRequestStates.Review.ToString())">Submit</TelerikButton>
                </div>
            </div>
            break;
        case 2:
            <div class="row my-3">
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.Status == RecordRequestStates.Release.ToString())">Submit</TelerikButton>
                </div>
            </div>
            break;
        case 3:
            <div class="row my-3">
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="OnCancel" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="@(() => IsModalVisible = true)" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" Enabled="@(SelectedRecordRequest.Status == RecordRequestStates.Claimed.ToString())">Submit</TelerikButton>
                </div>
            </div>
            break;
        default:
            break;
    }
}

<TelerikWindow Modal="true"
               Width="400px"
               @bind-Visible="@IsModalVisible"
               CloseOnOverlayClick="true">
    <WindowTitle>
        Please Confirm
    </WindowTitle>
    <WindowContent>
        @switch (ActiveTabIndex)
        {
            case 1:
                <div class="row mb-3">
                    <p><b>Request has been reviewed and submitted</b></p>
                    <p class="text-secondary">Kindly proceed to the next page and download the forms to be signed by your immediate supervisor</p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="@(async () => await OnReview())" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            case 2:
                <div class="row mb-3">
                    <p>Request has been approved and ready for release</p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="@(async () => await OnRelease())" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            case 3:
                <div class="row mb-3">
                    <p>Request has been completed</p>
                </div>
                <div class="d-flex gap-3 justify-content-center">
                    <TelerikButton OnClick="@(() => IsModalVisible = false)" FillMode="@ThemeConstants.Button.FillMode.Outline">Cancel</TelerikButton>
                    <TelerikButton OnClick="OnClaim" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Confirm</TelerikButton>
                </div>
                break;
            default:
                break;
        }
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

@code {
    private RenderFragment StepperFragment => @<div>
        <div class="row my-2">
            <h5>Processing Status</h5>
        </div>
        <TelerikStepper Value="@CurrentStepIndex" ValueChanged="@ValueChangeHandler" Linear="true" Orientation="@(!XSmall ? StepperOrientation.Vertical: StepperOrientation.Horizontal)">
            <StepperSteps>
                <StepperStep Label="Submit"></StepperStep>
                <StepperStep Label=@(XSmall ? "Review" : "Review & Evaluate")></StepperStep>
                <StepperStep Label="Release"></StepperStep>
                <StepperStep Label="Claim"></StepperStep>
            </StepperSteps>
        </TelerikStepper>
    </div>;
}

<style>
    .vl-right {
        border-right: 1px solid rgba(0, 0, 0, .15);
    }

    .hl-top {
        border-top: 1px solid rgba(0, 0, 0, .05);
    }

    .hl-bottom {
        border-bottom: 1px solid rgba(0, 0, 0, .05);
    }

    .k-stepper .k-step-label {
        display: inline-block;
    }

    .upload-btn {
        border: 1px solid rgba(0, 0, 0, .20);
        border-radius: 3px;
        padding: 3px 12px;
    }

    .toggle-button {
        width: 20px;
        height: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        cursor: pointer;
        user-select: none;
        display: inline-flex;
        line-height: 30px;
        text-align: center;
        align-items: center;
        justify-content: center;
    }

    .view-export-btn {
        border: none;
        color: #005A9C;
    }

    .record-upload-btn {
        width: 456px;
    }
</style>