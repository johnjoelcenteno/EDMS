@page "/request-management"
@using DPWH.EDMS.Api.Contracts
@using DPWH.EDMS.Components.Helpers
@using DPWH.EDMS.IDP.Core.Constants
@using DPWH.EDMS.Shared.Enums

@inherits RequestManagementBase

@attribute [Authorize(Policy = "RequireActiveRoles")]

<TelerikMediaQuery Media="(max-width: 480px)" OnChange="((changed) => XSmall = changed)"></TelerikMediaQuery>

<EdmsBreadcrumbs Data="@BreadcrumbItems" />
<EdmsLoader Visible="@IsLoading" />

<h3>Request Management</h3>

<hr />

<div class="d-flex flex-row mt-3">
    <TelerikCard Width="100%">
        <CardBody>
            <div class="d-flex flex-row justify-content-between">
                <CardTitle Class="mb-0">Request List</CardTitle>
                <TelerikButton Class="mb-2"
                               Icon="@FontIcon.Plus"
                               ThemeColor="@ThemeConstants.Button.ThemeColor.Primary"
                               OnClick="GoToAddNewRequest">
                    Add Request
                </TelerikButton>
            </div>
            <TelerikTabStrip ActiveTabIndexChanged="async(index) => await TabChangedHandler(index)">
                @foreach (var state in RequestStates)
                {
                    <TabStripTab Title="@state">
                        @LoadGrid()
                    </TabStripTab>
                }
                @if ((GenericHelper.GetDisplayValue(CurrentUser.Role)) == ApplicationRoles.Manager && Office == Offices.RMD.ToString() && ForApprovalCount > 0)
                {
                    <TabStripTab>
                        <HeaderTemplate>
                            <label>For Approval <sup class="counter-chip">@ForApprovalCount</sup></label>
                        </HeaderTemplate>
                        <Content>
                            @LoadGrid()
                        </Content>
                    </TabStripTab>
                }
                
            </TelerikTabStrip>
        </CardBody>
    </TelerikCard>
</div>

@code {
    private RenderFragment LoadGrid()
    {
        return @<div>
        @if (GridData != null && !XSmall)
    {
        <TelerikGrid TItem="RecordRequestModel"
                     @bind-PageSize="@PageSize"
                     Height="@GridHeight"
                     FilterMode="GridFilterMode.FilterRow"
                     Sortable=true
                     Data="GridData"
                     OnStateChanged="@OnStateChanged"
                     @ref="GridRef"
                     Context="item"
                     OnRowClick="GoToSelectedItemOverview">
            <GridSettings>
                <GridPagerSettings PageSizes="@PageSizes">
                </GridPagerSettings>
            </GridSettings>
            <GridColumns>
                <GridColumn Field=@nameof(RecordRequestModel.ControlNumber) Title="Control No.">
                    <FilterCellTemplate>
                        <TelerikNumericTextBox Value="@SearchControlNumber" 
                                           ValueChanged="@((int? val) =>
                                               {
                                                  SearchControlNumber = val;

                                                  SetFilterGrid();

                                               })">

                        </TelerikNumericTextBox>

                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(SearchControlNumber.HasValue)"
                                       OnClick="@(() =>
                                               {
                                                 SearchControlNumber = null;

                                                 SetFilterGrid();

                                              })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(RecordRequestModel.FullName) Title="Full Name" >
                    <FilterCellTemplate>
                        <TelerikTextBox Value="@SearchFullName"
                                               ValueChanged="@((string? val) =>
                                               {
                                                  SearchFullName = val;

                                                  SetFilterGrid();

                                               })">

                        </TelerikTextBox>

                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(!string.IsNullOrEmpty(SearchFullName))"
                                       OnClick="@(() =>
                                               {
                                                 SearchFullName = null;

                                                 SetFilterGrid();

                                              })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(RecordRequestModel.DateRequested) Title="Date Requested" DisplayFormat="{0:MMMM dd, yyyy}">
                    <FilterCellTemplate>
                        <TelerikDatePicker Value="@SelectedDate"
                                           ShowWeekNumbers="true" 
                                           ValueChanged="@((DateTime? val) =>
                                               {
                                                  SelectedDate = val;
                                                                         
                                                  SetFilterGrid();

                                               })">

                        </TelerikDatePicker>

                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(SelectedDate.HasValue)"
                                       OnClick="@(() =>
                                               {
                                                 SelectedDate = null;

                                                 SetFilterGrid();

                                              })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(RecordRequestModel.Purpose) Title="Purpose">
                    <FilterCellTemplate>
                        <TelerikTextBox Value="@SearchPurpose"
                                        ValueChanged="@((string? val) =>
                                               {
                                                  SearchPurpose = val;

                                                  SetFilterGrid();

                                               })">

                        </TelerikTextBox>

                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(!string.IsNullOrEmpty(SearchPurpose))"
                                       OnClick="@(() =>
                                               {
                                                 SearchPurpose = null;

                                                 SetFilterGrid();

                                              })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(RecordRequestModel.RmdRequestStatus) Title="RMD Status" Visible="false">
                    <FilterCellTemplate>
                        <TelerikDropDownList Data="@OfficeStatusList"
                                             Value="@SearchRmdStatus"
                                             ValueField="string"
                                             TextField="string"
                                             DefaultText="Select Status"
                                             Width="100%"
                                             FilterOperator="@StringFilterOperator.Contains"
                                             ValueChanged="@((string val) =>
                                                   {
                                                      SearchRmdStatus = val;

                                                      SetFilterGrid();

                                                   })">
                        </TelerikDropDownList>
                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(!string.IsNullOrEmpty(SearchRmdStatus))"
                                       OnClick="@(() =>
                                                  {
                                                       SearchRmdStatus = string.Empty;

                                                       SetFilterGrid();

                                                  })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(RecordRequestModel.HrmdRequestStatus) Title="HRMD Status" Visible="false">
                    <FilterCellTemplate>
                        <TelerikDropDownList Data="@OfficeStatusList"
                                             Value="@SearchHrmdStatus"
                                             ValueField="string"
                                             TextField="string"
                                             DefaultText="Select Status"
                                             Width="100%"
                                             FilterOperator="@StringFilterOperator.Contains"
                                             ValueChanged="@((string val) =>
                                                   {
                                                      SearchHrmdStatus = val;

                                                      SetFilterGrid();

                                                   })">
                        </TelerikDropDownList>
                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(!string.IsNullOrEmpty(SearchHrmdStatus))"
                                       OnClick="@(() =>
                                                  {
                                                       SearchHrmdStatus = string.Empty;

                                                       SetFilterGrid();

                                                  })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(RecordRequestModel.Status) Title="Status">
                    <FilterCellTemplate>
                        <TelerikDropDownList Data="@StatusList"
                                             Value="@SearchStatus"
                                             ValueField="string"
                                             TextField="string"
                                             DefaultText="Select Status"
                                             Width="100%"
                                             FilterOperator="@StringFilterOperator.Contains"
                                             ValueChanged="@((string val) =>
                                                   {
                                                      SearchStatus = val;
 
                                                      SetFilterGrid();
 
                                                   })">
                        </TelerikDropDownList>
                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(!string.IsNullOrEmpty(SearchStatus))"
                                       OnClick="@(() =>
                                                  {
                                                       SearchStatus = string.Empty;

                                                       SetFilterGrid();
 
                                                  })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
            </GridColumns>
        </TelerikGrid>
    }
    else if (GridData != null && XSmall)
    {
        <TelerikGrid TItem="RecordRequestModel"
                     @bind-PageSize="@PageSize"
                     Height="@GridHeight"
                     FilterMode="GridFilterMode.FilterRow"
                     Sortable=true
                     Data="GridData"
                     OnStateChanged="@OnStateChanged"
                     @ref="GridRef"
                     Context="item"
                     OnRowClick="GoToSelectedItemOverview">
            <GridSettings>
                <GridPagerSettings PageSizes="@PageSizes">
                </GridPagerSettings>
            </GridSettings>
            <DetailTemplate>
                @{
            var prop = item as RecordRequestModel;
                    <div class="d-flex flex-column">
                        <p><b>Status: </b>@item.Status</p>
                        <p><b>Control Number: </b>@item.ControlNumber</p>
                        <p><b>Purpose: </b>@item.Purpose</p>
                        <p><b>Date Requested: </b>@(GenericHelper.GetDateDisplay(item.DateRequested))</p>
                    </div>
                }
            </DetailTemplate>
            <GridColumns>
                <GridColumn Field=@nameof(RecordRequestModel.FullName) Title="Full Name">
                    <FilterCellTemplate>
                        <TelerikTextBox Value="@SearchFullName"
                                        ValueChanged="@((string? val) =>
                                               {
                                                  SearchFullName = val;

                                                  SetFilterGrid();

                                               })">

                        </TelerikTextBox>

                        <TelerikButton ButtonType="ButtonType.Button"
                                       Class="k-clear-button-visible ml-sm"
                                       Icon="@SvgIcon.FilterClear"
                                       Enabled="@(!string.IsNullOrEmpty(SearchFullName))"
                                       OnClick="@(() =>
                                               {
                                                 SearchFullName = null;

                                                 SetFilterGrid();

                                              })">
                        </TelerikButton>
                    </FilterCellTemplate>
                </GridColumn>
            </GridColumns>
        </TelerikGrid>
    }
    else
    {
        <span>No Data to display.</span>
    }
        <TelerikPager PageChanged="@PageChangedHandler"
                      Total="TotalItems"
                      ButtonCount="6"
                      PageSize="@PageSize"
                      PageSizeChanged="@PageSizeChangedHandler"
                      PageSizes="@(new List<int?> {5, 10, 20})"
                      Page="@Page">
        </TelerikPager>
    </div>;
    }
}

<style>
    .k-grid .k-table-row {
        cursor: pointer;
    }

    .k-tabstrip-top > .k-tabstrip-items-wrapper .k-item:active, .k-tabstrip-top > .k-tabstrip-items-wrapper .k-item.k-active {
        box-shadow: none;
    }

    .counter-chip {
        background-color: #FF0000;
        color: #fff;
        font-size: 12px;
        border-radius: 50%;
        padding: 3px 5px;
    }
</style>